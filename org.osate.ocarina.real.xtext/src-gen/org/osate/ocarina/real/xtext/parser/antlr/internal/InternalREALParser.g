/*
* generated by Xtext
*/
parser grammar InternalREALParser;

options {
	tokenVocab=InternalREALLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package org.osate.ocarina.real.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.ocarina.real.xtext.services.REALGrammarAccess;

}

@members {


	private REALGrammarAccess grammarAccess;
	 	
	public InternalREALParser(TokenStream input, REALGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "Model";	
	} 
	   	   	
	@Override
	protected REALGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTheoremsTheoremParserRuleCall_0()); 
	    }
		lv_theorems_0_0=ruleTheorem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"theorems",
        		lv_theorems_0_0, 
        		"Theorem");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleTheorem
entryRuleTheorem returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTheoremRule()); }
	 iv_ruleTheorem=ruleTheorem 
	 { $current=$iv_ruleTheorem.current; } 
	 EOF 
;

// Rule Theorem
ruleTheorem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_30
    {
    	newLeafNode(otherlv_0, grammarAccess.getTheoremAccess().getTheoremKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTheoremAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTheoremRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTheoremAccess().getRangeDefinitionRangeDefinitionParserRuleCall_2_0()); 
	    }
		lv_rangeDefinition_2_0=ruleRangeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTheoremRule());
	        }
       		set(
       			$current, 
       			"rangeDefinition",
        		lv_rangeDefinition_2_0, 
        		"RangeDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTheoremAccess().getSetDeclarationsSetDeclarationParserRuleCall_3_0()); 
	    }
		lv_setDeclarations_3_0=ruleSetDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTheoremRule());
	        }
       		add(
       			$current, 
       			"setDeclarations",
        		lv_setDeclarations_3_0, 
        		"SetDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTheoremAccess().getRequiredDefinitionRequiredDefinitionParserRuleCall_4_0()); 
	    }
		lv_requiredDefinition_4_0=ruleRequiredDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTheoremRule());
	        }
       		set(
       			$current, 
       			"requiredDefinition",
        		lv_requiredDefinition_4_0, 
        		"RequiredDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getTheoremAccess().getVerificationExpressionVerificationExpressionParserRuleCall_5_0_0()); 
	    }
		lv_verificationExpression_5_0=ruleVerificationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTheoremRule());
	        }
       		set(
       			$current, 
       			"verificationExpression",
        		lv_verificationExpression_5_0, 
        		"VerificationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTheoremAccess().getEvaluationExpressionEvaluationExpressionParserRuleCall_5_1_0()); 
	    }
		lv_evaluationExpression_6_0=ruleEvaluationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTheoremRule());
	        }
       		set(
       			$current, 
       			"evaluationExpression",
        		lv_evaluationExpression_6_0, 
        		"EvaluationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_7=KEYWORD_10
    {
    	newLeafNode(otherlv_7, grammarAccess.getTheoremAccess().getEndKeyword_6());
    }
(
(
		lv_endName_8_0=RULE_ID
		{
			newLeafNode(lv_endName_8_0, grammarAccess.getTheoremAccess().getEndNameIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTheoremRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endName",
        		lv_endName_8_0, 
        		"ID");
	    }

)
)?this_PUNC_SEMI_COLON_9=RULE_PUNC_SEMI_COLON
    { 
    newLeafNode(this_PUNC_SEMI_COLON_9, grammarAccess.getTheoremAccess().getPUNC_SEMI_COLONTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleRangeDefinition
entryRuleRangeDefinition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRangeDefinitionRule()); }
	 iv_ruleRangeDefinition=ruleRangeDefinition 
	 { $current=$iv_ruleRangeDefinition.current; } 
	 EOF 
;

// Rule RangeDefinition
ruleRangeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_29
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeDefinitionAccess().getForeachKeyword_0());
    }
(
(
		lv_element_1_0=RULE_ID
		{
			newLeafNode(lv_element_1_0, grammarAccess.getRangeDefinitionAccess().getElementIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"element",
        		lv_element_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=KEYWORD_4
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeDefinitionAccess().getInKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeDefinitionAccess().getSetSetExpressionParserRuleCall_3_0()); 
	    }
		lv_set_3_0=ruleSetExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeDefinitionRule());
	        }
       		set(
       			$current, 
       			"set",
        		lv_set_3_0, 
        		"SetExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_2
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeDefinitionAccess().getDoKeyword_4());
    }
)
;





// Entry rule entryRuleSetDeclaration
entryRuleSetDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSetDeclarationRule()); }
	 iv_ruleSetDeclaration=ruleSetDeclaration 
	 { $current=$iv_ruleSetDeclaration.current; } 
	 EOF 
;

// Rule SetDeclaration
ruleSetDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_set_0_0=RULE_ID
		{
			newLeafNode(lv_set_0_0, grammarAccess.getSetDeclarationAccess().getSetIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"set",
        		lv_set_0_0, 
        		"ID");
	    }

)
)(this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getSetDeclarationAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1_0()); 
    }
(
(
		lv_paramIdentifier_2_0=RULE_ID
		{
			newLeafNode(lv_paramIdentifier_2_0, grammarAccess.getSetDeclarationAccess().getParamIdentifierIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"paramIdentifier",
        		lv_paramIdentifier_2_0, 
        		"ID");
	    }

)
)this_PUNC_CLOSE_PARENTHESIS_3=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_3, grammarAccess.getSetDeclarationAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_1_2()); 
    }
)?this_AFFECTATION_OPERATOR_4=RULE_AFFECTATION_OPERATOR
    { 
    newLeafNode(this_AFFECTATION_OPERATOR_4, grammarAccess.getSetDeclarationAccess().getAFFECTATION_OPERATORTerminalRuleCall_2()); 
    }
this_PUNC_OPEN_BRACE_5=RULE_PUNC_OPEN_BRACE
    { 
    newLeafNode(this_PUNC_OPEN_BRACE_5, grammarAccess.getSetDeclarationAccess().getPUNC_OPEN_BRACETerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetDeclarationAccess().getElementBindingElementBindingParserRuleCall_4_0()); 
	    }
		lv_elementBinding_6_0=ruleElementBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetDeclarationRule());
	        }
       		set(
       			$current, 
       			"elementBinding",
        		lv_elementBinding_6_0, 
        		"ElementBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_7=KEYWORD_1
    {
    	newLeafNode(otherlv_7, grammarAccess.getSetDeclarationAccess().getVerticalLineKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetDeclarationAccess().getExprSelectionExpressionParserRuleCall_6_0()); 
	    }
		lv_expr_8_0=ruleSelectionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetDeclarationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_8_0, 
        		"SelectionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_CLOSE_BRACE_9=RULE_PUNC_CLOSE_BRACE
    { 
    newLeafNode(this_PUNC_CLOSE_BRACE_9, grammarAccess.getSetDeclarationAccess().getPUNC_CLOSE_BRACETerminalRuleCall_7()); 
    }
this_PUNC_SEMI_COLON_10=RULE_PUNC_SEMI_COLON
    { 
    newLeafNode(this_PUNC_SEMI_COLON_10, grammarAccess.getSetDeclarationAccess().getPUNC_SEMI_COLONTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleElementBinding
entryRuleElementBinding returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getElementBindingRule()); }
	 iv_ruleElementBinding=ruleElementBinding 
	 { $current=$iv_ruleElementBinding.current; } 
	 EOF 
;

// Rule ElementBinding
ruleElementBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_element_0_0=RULE_ID
		{
			newLeafNode(lv_element_0_0, grammarAccess.getElementBindingAccess().getElementIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"ID");
	    }

)
)
	otherlv_1=KEYWORD_4
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementBindingAccess().getInKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementBindingAccess().getSetSetExpressionParserRuleCall_2_0()); 
	    }
		lv_set_2_0=ruleSetExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementBindingRule());
	        }
       		set(
       			$current, 
       			"set",
        		lv_set_2_0, 
        		"SetExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelectionExpression
entryRuleSelectionExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectionExpressionRule()); }
	 iv_ruleSelectionExpression=ruleSelectionExpression 
	 { $current=$iv_ruleSelectionExpression.current; } 
	 EOF 
;

// Rule SelectionExpression
ruleSelectionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionExpressionAccess().getE1TerminalSelectionExpressionParserRuleCall_0_0()); 
	    }
		lv_e1_0_0=ruleTerminalSelectionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionExpressionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_0_0, 
        		"TerminalSelectionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionExpressionAccess().getOpBooleanOperatorParserRuleCall_1_0_0()); 
	    }
		lv_op_1_0=ruleBooleanOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"BooleanOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionExpressionAccess().getE2TerminalSelectionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_e2_2_0=ruleTerminalSelectionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_2_0, 
        		"TerminalSelectionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerminalSelectionExpression
entryRuleTerminalSelectionExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTerminalSelectionExpressionRule()); }
	 iv_ruleTerminalSelectionExpression=ruleTerminalSelectionExpression 
	 { $current=$iv_ruleTerminalSelectionExpression.current; } 
	 EOF 
;

// Rule TerminalSelectionExpression
ruleTerminalSelectionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTerminalSelectionExpressionAccess().getEGenericExpressionParserRuleCall_0_0()); 
	    }
		lv_e_0_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminalSelectionExpressionRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_0_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTerminalSelectionExpressionAccess().getRSelectionRelationParserRuleCall_1_0()); 
	    }
		lv_r_1_0=ruleSelectionRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminalSelectionExpressionRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_1_0, 
        		"SelectionRelation");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelectionRelation
entryRuleSelectionRelation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectionRelationRule()); }
	 iv_ruleSelectionRelation=ruleSelectionRelation 
	 { $current=$iv_ruleSelectionRelation.current; } 
	 EOF 
;

// Rule SelectionRelation
ruleSelectionRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionRelationAccess().getIdentifierSelectionRelationIdentifierParserRuleCall_0_0()); 
	    }
		lv_identifier_0_0=ruleSelectionRelationIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRelationRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"SelectionRelationIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getSelectionRelationAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionRelationAccess().getArgumentsSelectionRelationParameterParserRuleCall_2_0_0()); 
	    }
		lv_arguments_2_0=ruleSelectionRelationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRelationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"SelectionRelationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_PUNC_COMMA_3=RULE_PUNC_COMMA
    { 
    newLeafNode(this_PUNC_COMMA_3, grammarAccess.getSelectionRelationAccess().getPUNC_COMMATerminalRuleCall_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionRelationAccess().getArgumentsSelectionRelationParameterParserRuleCall_2_1_1_0()); 
	    }
		lv_arguments_4_0=ruleSelectionRelationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRelationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"SelectionRelationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?this_PUNC_CLOSE_PARENTHESIS_5=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_5, grammarAccess.getSelectionRelationAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleSelectionRelationIdentifier
entryRuleSelectionRelationIdentifier returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSelectionRelationIdentifierRule()); } 
	 iv_ruleSelectionRelationIdentifier=ruleSelectionRelationIdentifier 
	 { $current=$iv_ruleSelectionRelationIdentifier.current.getText(); }  
	 EOF 
;

// Rule SelectionRelationIdentifier
ruleSelectionRelationIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_45 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Subcomponent_OfKeyword_0()); 
    }

    |
	kw=KEYWORD_36 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Bound_ToKeyword_1()); 
    }

    |
	kw=KEYWORD_43 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Provided_ClassKeyword_2()); 
    }

    |
	kw=KEYWORD_40 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Connected_ToKeyword_3()); 
    }

    |
	kw=KEYWORD_46 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getCompare_Property_ValueKeyword_4()); 
    }

    |
	kw=KEYWORD_37 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Called_ByKeyword_5()); 
    }

    |
	kw=KEYWORD_35 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_CallingKeyword_6()); 
    }

    |
	kw=KEYWORD_38 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Accessed_ByKeyword_7()); 
    }

    |
	kw=KEYWORD_42 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Connecting_ToKeyword_8()); 
    }

    |
	kw=KEYWORD_39 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectionRelationIdentifierAccess().getIs_Accessing_ToKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleSelectionRelationParameter
entryRuleSelectionRelationParameter returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectionRelationParameterRule()); }
	 iv_ruleSelectionRelationParameter=ruleSelectionRelationParameter 
	 { $current=$iv_ruleSelectionRelationParameter.current; } 
	 EOF 
;

// Rule SelectionRelationParameter
ruleSelectionRelationParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionRelationParameterAccess().getLLiteralParserRuleCall_0_0()); 
	    }
		lv_l_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRelationParameterRule());
	        }
       		set(
       			$current, 
       			"l",
        		lv_l_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_identifier_1_0=RULE_ID
		{
			newLeafNode(lv_identifier_1_0, grammarAccess.getSelectionRelationParameterAccess().getIdentifierIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionRelationParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleRequiredDefinition
entryRuleRequiredDefinition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRequiredDefinitionRule()); }
	 iv_ruleRequiredDefinition=ruleRequiredDefinition 
	 { $current=$iv_ruleRequiredDefinition.current; } 
	 EOF 
;

// Rule RequiredDefinition
ruleRequiredDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_33
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequiredDefinitionAccess().getRequiresKeyword_0());
    }
this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getRequiredDefinitionAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1()); 
    }
(
(
		lv_theorems_2_0=RULE_ID
		{
			newLeafNode(lv_theorems_2_0, grammarAccess.getRequiredDefinitionAccess().getTheoremsIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredDefinitionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"theorems",
        		lv_theorems_2_0, 
        		"ID");
	    }

)
)(this_PUNC_COMMA_3=RULE_PUNC_COMMA
    { 
    newLeafNode(this_PUNC_COMMA_3, grammarAccess.getRequiredDefinitionAccess().getPUNC_COMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_theorems_4_0=RULE_ID
		{
			newLeafNode(lv_theorems_4_0, grammarAccess.getRequiredDefinitionAccess().getTheoremsIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredDefinitionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"theorems",
        		lv_theorems_4_0, 
        		"ID");
	    }

)
))*this_PUNC_CLOSE_PARENTHESIS_5=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_5, grammarAccess.getRequiredDefinitionAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_4()); 
    }
this_PUNC_SEMI_COLON_6=RULE_PUNC_SEMI_COLON
    { 
    newLeafNode(this_PUNC_SEMI_COLON_6, grammarAccess.getRequiredDefinitionAccess().getPUNC_SEMI_COLONTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleVerificationExpression
entryRuleVerificationExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationExpressionRule()); }
	 iv_ruleVerificationExpression=ruleVerificationExpression 
	 { $current=$iv_ruleVerificationExpression.current; } 
	 EOF 
;

// Rule VerificationExpression
ruleVerificationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_23
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationExpressionAccess().getCheckKeyword_0());
    }
this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getVerificationExpressionAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationExpressionAccess().getE1GenericExpressionParserRuleCall_2_0()); 
	    }
		lv_e1_2_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationExpressionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_2_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_CLOSE_PARENTHESIS_3=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_3, grammarAccess.getVerificationExpressionAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_3()); 
    }
this_PUNC_SEMI_COLON_4=RULE_PUNC_SEMI_COLON
    { 
    newLeafNode(this_PUNC_SEMI_COLON_4, grammarAccess.getVerificationExpressionAccess().getPUNC_SEMI_COLONTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleEvaluationExpression
entryRuleEvaluationExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getEvaluationExpressionRule()); }
	 iv_ruleEvaluationExpression=ruleEvaluationExpression 
	 { $current=$iv_ruleEvaluationExpression.current; } 
	 EOF 
;

// Rule EvaluationExpression
ruleEvaluationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_27
    {
    	newLeafNode(otherlv_0, grammarAccess.getEvaluationExpressionAccess().getReturnKeyword_0());
    }
this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getEvaluationExpressionAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEvaluationExpressionAccess().getFAggregationFunctionIdentifierParserRuleCall_2_0()); 
	    }
		lv_f_2_0=ruleAggregationFunctionIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEvaluationExpressionRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_2_0, 
        		"AggregationFunctionIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_OPEN_PARENTHESIS_3=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_3, grammarAccess.getEvaluationExpressionAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEvaluationExpressionAccess().getEGenericExpressionParserRuleCall_4_0()); 
	    }
		lv_e_4_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEvaluationExpressionRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_4_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_CLOSE_PARENTHESIS_5=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_5, grammarAccess.getEvaluationExpressionAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_5()); 
    }
this_PUNC_CLOSE_PARENTHESIS_6=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_6, grammarAccess.getEvaluationExpressionAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_6()); 
    }
this_PUNC_SEMI_COLON_7=RULE_PUNC_SEMI_COLON
    { 
    newLeafNode(this_PUNC_SEMI_COLON_7, grammarAccess.getEvaluationExpressionAccess().getPUNC_SEMI_COLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleGenericExpression
entryRuleGenericExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGenericExpressionRule()); }
	 iv_ruleGenericExpression=ruleGenericExpression 
	 { $current=$iv_ruleGenericExpression.current; } 
	 EOF 
;

// Rule GenericExpression
ruleGenericExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGenericExpressionAccess().getE1TerminalGenericExpressionParserRuleCall_0_0()); 
	    }
		lv_e1_0_0=ruleTerminalGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenericExpressionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_0_0, 
        		"TerminalGenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getGenericExpressionAccess().getOpGenericOperatorParserRuleCall_1_0_0()); 
	    }
		lv_op_1_0=ruleGenericOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenericExpressionRule());
	        }
       		add(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"GenericOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGenericExpressionAccess().getE2TerminalGenericExpressionParserRuleCall_1_1_0()); 
	    }
		lv_e2_2_0=ruleTerminalGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGenericExpressionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_2_0, 
        		"TerminalGenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerminalGenericExpression
entryRuleTerminalGenericExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTerminalGenericExpressionRule()); }
	 iv_ruleTerminalGenericExpression=ruleTerminalGenericExpression 
	 { $current=$iv_ruleTerminalGenericExpression.current; } 
	 EOF 
;

// Rule TerminalGenericExpression
ruleTerminalGenericExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTerminalGenericExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); 
	    }
		lv_literal_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminalGenericExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTerminalGenericExpressionAccess().getFcVerificationFunctionCallParserRuleCall_1_0()); 
	    }
		lv_fc_1_0=ruleVerificationFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminalGenericExpressionRule());
	        }
       		set(
       			$current, 
       			"fc",
        		lv_fc_1_0, 
        		"VerificationFunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTerminalGenericExpressionAccess().getTeTernaryExpressionParserRuleCall_2_0()); 
	    }
		lv_te_2_0=ruleTernaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminalGenericExpressionRule());
	        }
       		set(
       			$current, 
       			"te",
        		lv_te_2_0, 
        		"TernaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_PUNC_OPEN_PARENTHESIS_3=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_3, grammarAccess.getTerminalGenericExpressionAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getTerminalGenericExpressionAccess().getGenericExpressionParserRuleCall_3_1()); 
    }
    this_GenericExpression_4=ruleGenericExpression
    {
        $current = $this_GenericExpression_4.current;
        afterParserOrEnumRuleCall();
    }
this_PUNC_CLOSE_PARENTHESIS_5=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_5, grammarAccess.getTerminalGenericExpressionAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_3_2()); 
    }
))
;





// Entry rule entryRuleSetExpression
entryRuleSetExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSetExpressionRule()); }
	 iv_ruleSetExpression=ruleSetExpression 
	 { $current=$iv_ruleSetExpression.current; } 
	 EOF 
;

// Rule SetExpression
ruleSetExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSetExpressionAccess().getE1TerminalSetExpressionParserRuleCall_0_0()); 
	    }
		lv_e1_0_0=ruleTerminalSetExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetExpressionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_0_0, 
        		"TerminalSetExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSetExpressionAccess().getOpSetOperatorParserRuleCall_1_0_0()); 
	    }
		lv_op_1_0=ruleSetOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetExpressionRule());
	        }
       		add(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"SetOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSetExpressionAccess().getE2TerminalSetExpressionParserRuleCall_1_1_0()); 
	    }
		lv_e2_2_0=ruleTerminalSetExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetExpressionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_2_0, 
        		"TerminalSetExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerminalSetExpression
entryRuleTerminalSetExpression returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getTerminalSetExpressionRule()); } 
	 iv_ruleTerminalSetExpression=ruleTerminalSetExpression 
	 { $current=$iv_ruleTerminalSetExpression.current.getText(); }  
	 EOF 
;

// Rule TerminalSetExpression
ruleTerminalSetExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getTerminalSetExpressionAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleTernaryExpression
entryRuleTernaryExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTernaryExpressionRule()); }
	 iv_ruleTernaryExpression=ruleTernaryExpression 
	 { $current=$iv_ruleTernaryExpression.current; } 
	 EOF 
;

// Rule TernaryExpression
ruleTernaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_3
    {
    	newLeafNode(otherlv_0, grammarAccess.getTernaryExpressionAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getConditionalGenericExpressionParserRuleCall_1_0()); 
	    }
		lv_conditional_1_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTernaryExpressionRule());
	        }
       		set(
       			$current, 
       			"conditional",
        		lv_conditional_1_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=KEYWORD_18
    {
    	newLeafNode(otherlv_2, grammarAccess.getTernaryExpressionAccess().getThenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getTrueValueGenericExpressionParserRuleCall_3_0()); 
	    }
		lv_trueValue_3_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTernaryExpressionRule());
	        }
       		set(
       			$current, 
       			"trueValue",
        		lv_trueValue_3_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_17
    {
    	newLeafNode(otherlv_4, grammarAccess.getTernaryExpressionAccess().getElseKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getFalseValueGenericExpressionParserRuleCall_5_0()); 
	    }
		lv_falseValue_5_0=ruleGenericExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTernaryExpressionRule());
	        }
       		set(
       			$current, 
       			"falseValue",
        		lv_falseValue_5_0, 
        		"GenericExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVerificationFunctionCall
entryRuleVerificationFunctionCall returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationFunctionCallRule()); }
	 iv_ruleVerificationFunctionCall=ruleVerificationFunctionCall 
	 { $current=$iv_ruleVerificationFunctionCall.current; } 
	 EOF 
;

// Rule VerificationFunctionCall
ruleVerificationFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFunctionCallAccess().getFVerificationFunctionIdentifierParserRuleCall_0_0()); 
	    }
		lv_f_0_0=ruleVerificationFunctionIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFunctionCallRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_0_0, 
        		"VerificationFunctionIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PUNC_OPEN_PARENTHESIS_1=RULE_PUNC_OPEN_PARENTHESIS
    { 
    newLeafNode(this_PUNC_OPEN_PARENTHESIS_1, grammarAccess.getVerificationFunctionCallAccess().getPUNC_OPEN_PARENTHESISTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFunctionCallAccess().getArgumentsVerificationFunctionParameterParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=ruleVerificationFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"VerificationFunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_PUNC_COMMA_3=RULE_PUNC_COMMA
    { 
    newLeafNode(this_PUNC_COMMA_3, grammarAccess.getVerificationFunctionCallAccess().getPUNC_COMMATerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFunctionCallAccess().getArgumentsVerificationFunctionParameterParserRuleCall_3_1_0()); 
	    }
		lv_arguments_4_0=ruleVerificationFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"VerificationFunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_PUNC_CLOSE_PARENTHESIS_5=RULE_PUNC_CLOSE_PARENTHESIS
    { 
    newLeafNode(this_PUNC_CLOSE_PARENTHESIS_5, grammarAccess.getVerificationFunctionCallAccess().getPUNC_CLOSE_PARENTHESISTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleVerificationFunctionParameter
entryRuleVerificationFunctionParameter returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationFunctionParameterRule()); }
	 iv_ruleVerificationFunctionParameter=ruleVerificationFunctionParameter 
	 { $current=$iv_ruleVerificationFunctionParameter.current; } 
	 EOF 
;

// Rule VerificationFunctionParameter
ruleVerificationFunctionParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFunctionParameterAccess().getLLiteralParserRuleCall_0_0()); 
	    }
		lv_l_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFunctionParameterRule());
	        }
       		set(
       			$current, 
       			"l",
        		lv_l_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_identifier_1_0=RULE_ID
		{
			newLeafNode(lv_identifier_1_0, grammarAccess.getVerificationFunctionParameterAccess().getIdentifierIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationFunctionParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFunctionParameterAccess().getVfiVerificationFunctionCallParserRuleCall_2_0()); 
	    }
		lv_vfi_2_0=ruleVerificationFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFunctionParameterRule());
	        }
       		set(
       			$current, 
       			"vfi",
        		lv_vfi_2_0, 
        		"VerificationFunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAggregationFunctionIdentifier
entryRuleAggregationFunctionIdentifier returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getAggregationFunctionIdentifierRule()); } 
	 iv_ruleAggregationFunctionIdentifier=ruleAggregationFunctionIdentifier 
	 { $current=$iv_ruleAggregationFunctionIdentifier.current.getText(); }  
	 EOF 
;

// Rule AggregationFunctionIdentifier
ruleAggregationFunctionIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_15 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggregationFunctionIdentifierAccess().getMSumKeyword_0()); 
    }

    |
	kw=KEYWORD_14 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggregationFunctionIdentifierAccess().getMMaxKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleVerificationFunctionIdentifier
entryRuleVerificationFunctionIdentifier returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getVerificationFunctionIdentifierRule()); } 
	 iv_ruleVerificationFunctionIdentifier=ruleVerificationFunctionIdentifier 
	 { $current=$iv_ruleVerificationFunctionIdentifier.current.getText(); }  
	 EOF 
;

// Rule VerificationFunctionIdentifier
ruleVerificationFunctionIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_31 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getCardinalKeyword_0()); 
    }

    |
	kw=KEYWORD_9 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getSumKeyword_1()); 
    }

    |
	kw=KEYWORD_7 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getMaxKeyword_2()); 
    }

    |
	kw=KEYWORD_8 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getMinKeyword_3()); 
    }

    |
	kw=KEYWORD_28 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getProductKeyword_4()); 
    }

    |
	kw=KEYWORD_5 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getGCDKeyword_5()); 
    }

    |
	kw=KEYWORD_6 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getLCMKeyword_6()); 
    }

    |
	kw=KEYWORD_44 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getGet_Property_ValueKeyword_7()); 
    }

    |
	kw=KEYWORD_32 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getPropertyKeyword_8()); 
    }

    |
	kw=KEYWORD_41 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getProperty_ExistsKeyword_9()); 
    }

    |
	kw=KEYWORD_34 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getAll_EqualsKeyword_10()); 
    }

    |
	kw=KEYWORD_25 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getExistsKeyword_11()); 
    }

    |
	kw=KEYWORD_26 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getSystemKeyword_12()); 
    }

    |
	kw=KEYWORD_20 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getFirstKeyword_13()); 
    }

    |
	kw=KEYWORD_12 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getLastKeyword_14()); 
    }

    |
	kw=KEYWORD_11 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getHeadKeyword_15()); 
    }

    |
	kw=KEYWORD_22 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getQueueKeyword_16()); 
    }

    |
	kw=KEYWORD_13 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getListKeyword_17()); 
    }

    |
	kw=KEYWORD_16 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getSizeKeyword_18()); 
    }

    |
	kw=KEYWORD_21 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationFunctionIdentifierAccess().getFloatKeyword_19()); 
    }
)
    ;





// Entry rule entryRuleGenericOperator
entryRuleGenericOperator returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getGenericOperatorRule()); } 
	 iv_ruleGenericOperator=ruleGenericOperator 
	 { $current=$iv_ruleGenericOperator.current.getText(); }  
	 EOF 
;

// Rule GenericOperator
ruleGenericOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
    { 
        newCompositeNode(grammarAccess.getGenericOperatorAccess().getComparisonOperatorParserRuleCall_0()); 
    }
    this_ComparisonOperator_0=ruleComparisonOperator    {
		$current.merge(this_ComparisonOperator_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGenericOperatorAccess().getBooleanOperatorParserRuleCall_1()); 
    }
    this_BooleanOperator_1=ruleBooleanOperator    {
		$current.merge(this_BooleanOperator_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGenericOperatorAccess().getArithmeticOperatorParserRuleCall_2()); 
    }
    this_ArithmeticOperator_2=ruleArithmeticOperator    {
		$current.merge(this_ArithmeticOperator_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getBBOOLEANParserRuleCall_0_0()); 
	    }
		lv_b_0_0=ruleBOOLEAN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_0_0, 
        		"BOOLEAN");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_s_1_0=RULE_STRING
		{
			newLeafNode(lv_s_1_0, grammarAccess.getLiteralAccess().getSSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"s",
        		lv_s_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_n_2_0=RULE_NUMERIC
		{
			newLeafNode(lv_n_2_0, grammarAccess.getLiteralAccess().getNNUMERICTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"n",
        		lv_n_2_0, 
        		"NUMERIC");
	    }

)
))
;





// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	 iv_ruleBOOLEAN=ruleBOOLEAN 
	 { $current=$iv_ruleBOOLEAN.current; } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=
	KEYWORD_19
    {
        newLeafNode(lv_value_0_1, grammarAccess.getBOOLEANAccess().getValueTrueKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBOOLEANRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_1, null);
	    }

    |		lv_value_0_2=
	KEYWORD_24
    {
        newLeafNode(lv_value_0_2, grammarAccess.getBOOLEANAccess().getValueFalseKeyword_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBOOLEANRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

)

)
)
;





// Entry rule entryRuleSetOperator
entryRuleSetOperator returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSetOperatorRule()); } 
	 iv_ruleSetOperator=ruleSetOperator 
	 { $current=$iv_ruleSetOperator.current.getText(); }  
	 EOF 
;

// Rule SetOperator
ruleSetOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_PLUS_0=RULE_PLUS    {
		$current.merge(this_PLUS_0);
    }

    { 
    newLeafNode(this_PLUS_0, grammarAccess.getSetOperatorAccess().getPLUSTerminalRuleCall_0()); 
    }

    |    this_STAR_1=RULE_STAR    {
		$current.merge(this_STAR_1);
    }

    { 
    newLeafNode(this_STAR_1, grammarAccess.getSetOperatorAccess().getSTARTerminalRuleCall_1()); 
    }

    |    this_SLASH_2=RULE_SLASH    {
		$current.merge(this_SLASH_2);
    }

    { 
    newLeafNode(this_SLASH_2, grammarAccess.getSetOperatorAccess().getSLASHTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleArithmeticOperator
entryRuleArithmeticOperator returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getArithmeticOperatorRule()); } 
	 iv_ruleArithmeticOperator=ruleArithmeticOperator 
	 { $current=$iv_ruleArithmeticOperator.current.getText(); }  
	 EOF 
;

// Rule ArithmeticOperator
ruleArithmeticOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_PLUS_0=RULE_PLUS    {
		$current.merge(this_PLUS_0);
    }

    { 
    newLeafNode(this_PLUS_0, grammarAccess.getArithmeticOperatorAccess().getPLUSTerminalRuleCall_0()); 
    }

    |    this_MINUS_1=RULE_MINUS    {
		$current.merge(this_MINUS_1);
    }

    { 
    newLeafNode(this_MINUS_1, grammarAccess.getArithmeticOperatorAccess().getMINUSTerminalRuleCall_1()); 
    }

    |    this_STAR_2=RULE_STAR    {
		$current.merge(this_STAR_2);
    }

    { 
    newLeafNode(this_STAR_2, grammarAccess.getArithmeticOperatorAccess().getSTARTerminalRuleCall_2()); 
    }

    |    this_SLASH_3=RULE_SLASH    {
		$current.merge(this_SLASH_3);
    }

    { 
    newLeafNode(this_SLASH_3, grammarAccess.getArithmeticOperatorAccess().getSLASHTerminalRuleCall_3()); 
    }

    |    this_POWER_4=RULE_POWER    {
		$current.merge(this_POWER_4);
    }

    { 
    newLeafNode(this_POWER_4, grammarAccess.getArithmeticOperatorAccess().getPOWERTerminalRuleCall_4()); 
    }
)
    ;





// Entry rule entryRuleBooleanOperator
entryRuleBooleanOperator returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getBooleanOperatorRule()); } 
	 iv_ruleBooleanOperator=ruleBooleanOperator 
	 { $current=$iv_ruleBooleanOperator.current.getText(); }  
	 EOF 
;

// Rule BooleanOperator
ruleBooleanOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_AND_0=RULE_AND    {
		$current.merge(this_AND_0);
    }

    { 
    newLeafNode(this_AND_0, grammarAccess.getBooleanOperatorAccess().getANDTerminalRuleCall_0()); 
    }

    |    this_NOT_1=RULE_NOT    {
		$current.merge(this_NOT_1);
    }

    { 
    newLeafNode(this_NOT_1, grammarAccess.getBooleanOperatorAccess().getNOTTerminalRuleCall_1()); 
    }

    |    this_OR_2=RULE_OR    {
		$current.merge(this_OR_2);
    }

    { 
    newLeafNode(this_OR_2, grammarAccess.getBooleanOperatorAccess().getORTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getComparisonOperatorRule()); } 
	 iv_ruleComparisonOperator=ruleComparisonOperator 
	 { $current=$iv_ruleComparisonOperator.current.getText(); }  
	 EOF 
;

// Rule ComparisonOperator
ruleComparisonOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_LESS_0=RULE_LESS    {
		$current.merge(this_LESS_0);
    }

    { 
    newLeafNode(this_LESS_0, grammarAccess.getComparisonOperatorAccess().getLESSTerminalRuleCall_0()); 
    }

    |    this_LESS_EQUAL_1=RULE_LESS_EQUAL    {
		$current.merge(this_LESS_EQUAL_1);
    }

    { 
    newLeafNode(this_LESS_EQUAL_1, grammarAccess.getComparisonOperatorAccess().getLESS_EQUALTerminalRuleCall_1()); 
    }

    |    this_EQUAL_2=RULE_EQUAL    {
		$current.merge(this_EQUAL_2);
    }

    { 
    newLeafNode(this_EQUAL_2, grammarAccess.getComparisonOperatorAccess().getEQUALTerminalRuleCall_2()); 
    }

    |    this_GREATER_EQUAL_3=RULE_GREATER_EQUAL    {
		$current.merge(this_GREATER_EQUAL_3);
    }

    { 
    newLeafNode(this_GREATER_EQUAL_3, grammarAccess.getComparisonOperatorAccess().getGREATER_EQUALTerminalRuleCall_3()); 
    }

    |    this_GREATER_4=RULE_GREATER    {
		$current.merge(this_GREATER_4);
    }

    { 
    newLeafNode(this_GREATER_4, grammarAccess.getComparisonOperatorAccess().getGREATERTerminalRuleCall_4()); 
    }

    |    this_NOT_EQUAL_5=RULE_NOT_EQUAL    {
		$current.merge(this_NOT_EQUAL_5);
    }

    { 
    newLeafNode(this_NOT_EQUAL_5, grammarAccess.getComparisonOperatorAccess().getNOT_EQUALTerminalRuleCall_5()); 
    }
)
    ;





